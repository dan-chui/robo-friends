{"version":3,"sources":["components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["CardList","_ref","robots","Error","SearchBox","searchfield","searchChange","react_default","a","createElement","className","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","inherits","createClass","key","value","error","info","setState","Component","App","onSearchChange","event","target","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","name","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_ErrorBoundary","components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_containers_App"],"mappings":"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","file":"static/js/main.73812801.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({ robots }) => {\r\n    if (true) {\r\n        throw new Error('ERROR!');\r\n    }\r\n\r\n    return (\r\n    <div>\r\n        {\r\n        robots.map((user, i) => {\r\n        return (\r\n        <Card \r\n            key={i} \r\n            id={robots[i].id} \r\n            name={robots[i].name} \r\n            email={robots[i].email}                \r\n            />\r\n        );\r\n    })\r\n        }\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n    return (\r\n    <div className=\"pa2\">    \r\n        <input\r\n        className=\"pa3 ba b--green bg-lightest-blue\" \r\n        type='search' \r\n        placeholder=\"search robots\"\r\n        onChange={searchChange}\r\n        />\r\n        \r\n    </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render () {\r\n        if (this.state.hasError) {\r\n            return <h1>An Error happened!</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport ErrorBoundary from \"../components/ErrorBoundary\";\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield:''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({ robots: users }));\r\n        \r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n    }\r\n\r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        return !robots.length ?\r\n            <h1>Loading</h1> :\r\n            (\r\n                <div className=\"tc\">\r\n                  <h1 className=\"f1\">RoboFriends</h1>\r\n                  <SearchBox searchChange={this.onSearchChange}/>\r\n                  <Scroll>\r\n                    <ErrorBoundary>\r\n                        <CardList robots={filteredRobots} />\r\n                    </ErrorBoundary>\r\n                  </Scroll>\r\n                  \r\n                </div>\r\n            );\r\n        \r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n      <App />  \n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}