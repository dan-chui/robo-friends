{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","user","i","components_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","inherits","createClass","value","error","info","setState","Component","App","onSearchChange","event","target","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_ErrorBoundary","components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_containers_App"],"mappings":"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","file":"static/js/main.ad7510d3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = ({ name, email, id }) => {\r\n    return (\r\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow b2 shadow-5\">\r\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({ robots }) => {\r\n     return (\r\n    <div>\r\n        {\r\n        robots.map((user, i) => {\r\n        return (\r\n        <Card \r\n            key={i} \r\n            id={robots[i].id} \r\n            name={robots[i].name} \r\n            email={robots[i].email}                \r\n            />\r\n        );\r\n    })\r\n        }\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n    return (\r\n    <div className=\"pa2\">    \r\n        <input\r\n        className=\"pa3 ba b--green bg-lightest-blue\" \r\n        type='search' \r\n        placeholder=\"search robots\"\r\n        onChange={searchChange}\r\n        />\r\n        \r\n    </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true })\r\n    }\r\n\r\n    render () {\r\n        if (this.state.hasError) {\r\n            return <h1>An Error happened!</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport ErrorBoundary from \"../components/ErrorBoundary\";\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield:''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({ robots: users }));\r\n        \r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n    }\r\n\r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        return !robots.length ?\r\n            <h1>Loading</h1> :\r\n            (\r\n                <div className=\"tc\">\r\n                  <h1 className=\"f1\">RoboFriends</h1>\r\n                  <SearchBox searchChange={this.onSearchChange}/>\r\n                  <Scroll>\r\n                    <ErrorBoundary>\r\n                        <CardList robots={filteredRobots} />\r\n                    </ErrorBoundary>\r\n                  </Scroll>\r\n                  \r\n                </div>\r\n            );\r\n        \r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n      <App />  \n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}